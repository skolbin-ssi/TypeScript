tests/cases/compiler/strictOptionalProperties1.ts(6,5): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(12,5): error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(20,9): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(28,9): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(53,5): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(60,5): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(64,5): error TS2322: Type '[number, string?, string?]' is not assignable to type '[number, string?]'.
  Target allows only 2 element(s) but source may have more.
tests/cases/compiler/strictOptionalProperties1.ts(73,5): error TS2322: Type '[number, never?, never?, never?]' is not assignable to type '[number, string?, boolean?]'.
  Target allows only 3 element(s) but source may have more.
tests/cases/compiler/strictOptionalProperties1.ts(74,5): error TS2322: Type '[never?, never?, true?]' is not assignable to type '[number, string?, boolean?]'.
  Source provides no match for required element at position 0 in target.
tests/cases/compiler/strictOptionalProperties1.ts(75,14): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(99,34): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(105,45): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(106,55): error TS2322: Type 'undefined' is not assignable to type 'boolean'.
tests/cases/compiler/strictOptionalProperties1.ts(107,45): error TS2322: Type 'undefined' is not assignable to type 'string'.
tests/cases/compiler/strictOptionalProperties1.ts(107,56): error TS2322: Type 'undefined' is not assignable to type 'boolean'.
tests/cases/compiler/strictOptionalProperties1.ts(111,31): error TS2322: Type 'undefined' is not assignable to type 'number'.
tests/cases/compiler/strictOptionalProperties1.ts(119,5): error TS2411: Property 'bar' of type 'string | undefined' is not assignable to string index type 'string'.


==== tests/cases/compiler/strictOptionalProperties1.ts (17 errors) ====
    function f1(obj: { a?: string, b?: string | undefined }) {
        let a = obj.a;  // string | undefined
        let b = obj.b;  // string | undefined
        obj.a = 'hello';
        obj.b = 'hello';
        obj.a = undefined;  // Error
        ~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
        obj.b = undefined;
    }
    
    function f2(obj: { a?: string, b?: string | undefined }) {
        obj = obj;
        obj.a = obj.a;  // Error
        ~~~~~
!!! error TS2322: Type 'string | undefined' is not assignable to type 'string'.
!!! error TS2322:   Type 'undefined' is not assignable to type 'string'.
        obj.b = obj.b;
        if ('a' in obj) {
            obj.a;
            obj.a = obj.a;
        }
        else {
            obj.a;
            obj.a = obj.a;  // Error
            ~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
        }
        if (obj.hasOwnProperty('a')) {
            obj.a;
            obj.a = obj.a;
        }
        else {
            obj.a;
            obj.a = obj.a;  // Error
            ~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
        }
        if ('b' in obj) {
            obj.b;
            obj.b = obj.b;
        }
        else {
            obj.b;
            obj.b = obj.b;
        }
        if (obj.hasOwnProperty('b')) {
            obj.b;
            obj.b = obj.b;
        }
        else {
            obj.b;
            obj.b = obj.b;
        }
    }
    
    function f3(obj: Partial<{ a: string, b: string | undefined }>) {
        let a = obj.a;  // string | undefined
        let b = obj.b;  // string | undefined
        obj.a = 'hello';
        obj.b = 'hello';
        obj.a = undefined;  // Error
        ~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
        obj.b = undefined;
    }
    
    function f4(t: [string?]) {
        let x = t[0];  // string | undefined
        t[0] = 'hello';
        t[0] = undefined;  // Error
        ~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
    }
    
    function f4a(t1: [number, string?], t2: [number, string?, string?]) {
        t1 = t2;  // Wasn't an error, but should be
        ~~
!!! error TS2322: Type '[number, string?, string?]' is not assignable to type '[number, string?]'.
!!! error TS2322:   Target allows only 2 element(s) but source may have more.
    }
    
    function f5(t: [number, string?, boolean?]) {
        t = [42];
        t = [42, 'abc'];
        t = [42, 'abc', true];
        t = [42, ,];
        t = [42, , ,];
        t = [42, , , ,];  // Error
        ~
!!! error TS2322: Type '[number, never?, never?, never?]' is not assignable to type '[number, string?, boolean?]'.
!!! error TS2322:   Target allows only 3 element(s) but source may have more.
        t = [, , true];  // Error
        ~
!!! error TS2322: Type '[never?, never?, true?]' is not assignable to type '[number, string?, boolean?]'.
!!! error TS2322:   Source provides no match for required element at position 0 in target.
        t = [42, undefined, true];  // Error
                 ~~~~~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
    }
    
    function f6() {
        const t1 = [1, 2] as const;
        const t2 = [1, 2, ,] as const;
        const t3 = [1, 2, , ,] as const;
        const t4 = [1, , 2] as const;
        const t5 = [1, , , 2] as const;
    }
    
    // Example from #13195
    
    type Props = {
        foo: string;
        bar: string
    }
    
    type InputProps = {
        foo?: string;
        bar: string;
    }
    
    const defaultProps: Pick<Props, 'foo'> = { foo: 'foo' };
    const inputProps: InputProps = { foo: undefined, bar: 'bar' };
                                     ~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
!!! related TS6500 tests/cases/compiler/strictOptionalProperties1.ts:94:5: The expected type comes from property 'foo' which is declared here on type 'InputProps'
    const completeProps: Props = { ...defaultProps, ...inputProps };
    
    // Example from #13195
    
    const t1: [number, string?, boolean?] = [1];
    const t2: [number, string?, boolean?] = [1, undefined];
                                                ~~~~~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
    const t3: [number, string?, boolean?] = [1, "string", undefined];
                                                          ~~~~~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'boolean'.
    const t4: [number, string?, boolean?] = [1, undefined, undefined];
                                                ~~~~~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'string'.
                                                           ~~~~~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'boolean'.
    
    // Example from #13195
    
    const x: { foo?: number } = { foo: undefined };
                                  ~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'number'.
!!! related TS6500 tests/cases/compiler/strictOptionalProperties1.ts:111:12: The expected type comes from property 'foo' which is declared here on type '{ foo?: number; }'
    const y: { foo: number } = { foo: 123, ...x };
    
    // Index signatures and strict optional properties
    
    interface Test {
        [key: string]: string;
        foo?: string;  // Should be ok
        bar?: string | undefined;  // Error
        ~~~
!!! error TS2411: Property 'bar' of type 'string | undefined' is not assignable to string index type 'string'.
    }
    